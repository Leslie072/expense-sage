# Simple Railway Dockerfile for Flutter Web
FROM ghcr.io/cirruslabs/flutter:stable AS build

WORKDIR /app
COPY pubspec.yaml pubspec.lock ./
RUN flutter pub get
COPY . .
RUN flutter build web --release --no-tree-shake-icons

# Production stage
FROM nginx:alpine

# Install envsubst for port substitution
RUN apk add --no-cache gettext

# Copy built app
COPY --from=build /app/build/web /usr/share/nginx/html

# Create nginx config template
RUN echo 'server {' > /etc/nginx/conf.d/default.conf.template && \
    echo '    listen ${PORT};' >> /etc/nginx/conf.d/default.conf.template && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf.template && \
    echo '        root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf.template && \
    echo '        index index.html;' >> /etc/nginx/conf.d/default.conf.template && \
    echo '        try_files $$uri $$uri/ /index.html;' >> /etc/nginx/conf.d/default.conf.template && \
    echo '    }' >> /etc/nginx/conf.d/default.conf.template && \
    echo '}' >> /etc/nginx/conf.d/default.conf.template

# Create startup script
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'envsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh && \
    chmod +x /start.sh

CMD ["/start.sh"]
